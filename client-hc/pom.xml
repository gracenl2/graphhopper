<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Licensed to GraphHopper GmbH under one or more contributor
  ~  license agreements. See the NOTICE file distributed with this work for
  ~  additional information regarding copyright ownership.
  ~
  ~  GraphHopper GmbH licenses this file to you under the Apache License,
  ~  Version 2.0 (the "License"); you may not use this file except in
  ~  compliance with the License. You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>directions-api-client-hc</artifactId>
    <version>11.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>GraphHopper Directions API hand-crafted Java Client.</name>
     
    <parent>
        <groupId>com.graphhopper</groupId>
        <artifactId>graphhopper-parent</artifactId>
        <version>11.0-SNAPSHOT</version>
    </parent>  
    
    <dependencies>
        <dependency>
            <groupId>com.graphhopper</groupId>
            <artifactId>graphhopper-web-api</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        <!-- use same kotlin stdlib version as we use in core -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>4.11.0</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-testing</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>1.0.2</version>
        </dependency>
    </dependencies>

    <build>
        <!-- make version available at runtime -->
        <plugins>
        <plugin>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <version>1.9.11</version>
            <dependencies>
                <!-- JUnit 5 support -->
                <dependency>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-junit5-plugin</artifactId>
                <version>1.2.1</version>
                </dependency>
            </dependencies>
            <configuration>
                <useClasspathJar>false</useClasspathJar>   <!-- avoid long classpath jar on macOS -->
                <!-- Classes to mutate (glob, not regex) -->
                <targetClasses>
                    <param>com.graphhopper.api.GraphHopperWeb*</param>
                </targetClasses>

                <!-- Tests to run (exact FQCN or simple glob; not regex) -->
                <targetTests>
                    <param>com.graphhopper.api.GraphHopperWebTest*</param>
                </targetTests>

                <!-- Sensible defaults -->
                <mutators>
                    <mutator>DEFAULTS</mutator>
                </mutators>
                <outputFormats>
                    <param>HTML</param>
                    <param>XML</param>
                </outputFormats>
                <threads>4</threads>
                <jvmArgs>
                    <jvmArg>-Dfile.encoding=UTF-8</jvmArg>
                </jvmArgs>
            </configuration>
        </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/version</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/version</exclude>
                </excludes>
            </resource>
        </resources>
    </build>
</project>
